<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>core.base</artifactId>
	<version>1.0.1-SNAPSHOT</version>
	<name>Modulo goToBusiness</name>
	<description>Un contenitore per realizzare il software dei tuoi sogni. E' provvisto di tutto il minimo necessario per iniziare lo sviluppo di una generica applicazione arbitrariamente complessa. Un set di junit esemplificano il funzionamento delle varie componenti. A scopo dimostrativo l'applicazione e' esposta al web da una semplice servlet deployabile su un application server Tomcat.</description>
	<packaging>war</packaging>
	<url>https://github.com/kmtnck/core.base</url>

	<parent>
		<groupId>it.alessandromodica.open</groupId>
		<artifactId>api.base</artifactId>
		<version>1.0.7-SNAPSHOT</version>
	</parent>

	<scm>
		<connection>scm:git:https://github.com/kmtnck/core.base.git</connection>
		<developerConnection>scm:git:https://github.com/kmtnck/core.base.git</developerConnection>
		<url>https://github.com/kmtnck/core.base.git</url>
		<tag>v@{project.version}.${buildDate}</tag>
	</scm>

	<properties>
		<tomcat.version>5.0.28</tomcat.version>
		<hsqldb.version>2.5.0</hsqldb.version>
		<resteasy.version>3.12.0.Final</resteasy.version>
		<yarepo.version>1.1.1-SNAPSHOT</yarepo.version>
	</properties>


	<dependencies>
		<!-- XXX: classe junit, puo evolversi nel tempo con la versione, riadattare 
			i junit ad ogni change version -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
		</dependency>

		<!-- classe del repository persistence con tecnologia hibernate -->
		<dependency>
			<groupId>it.alessandromodica.open</groupId>
			<artifactId>yarepository</artifactId>
			<version>${yarepo.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.12</version>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.5</version>
		</dependency>


		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itextpdf</artifactId>
			<version>5.4.5</version>
		</dependency>

		<!-- SPRING e SPRING BOOT DEPENDENCIES -->

		<!-- configurazione minima necessaria per avviare un classico server web 
			servlet e listener con un context spring gestibile dall'esterno -->
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-context -->

		<!-- Spring -->
		<!-- dipendenze necessarie solo se si vuole avviare l'applicazione in un 
			contesto non springboot -->
		<!-- <dependency> <groupId>org.springframework</groupId> <artifactId>spring-core</artifactId> 
			<version>${spring-framework.version}</version> </dependency> <dependency> 
			<groupId>org.springframework</groupId> <artifactId>spring-context</artifactId> 
			<version>${spring-framework.version}</version> </dependency> -->
		<!-- <dependency> <groupId>org.springframework</groupId> <artifactId>spring-web</artifactId> 
			<version>${spring-framework.version}</version> </dependency> -->
		<!-- <dependency> <groupId>org.springframework</groupId> <artifactId>spring-webmvc</artifactId> 
			<version>${spring-framework.version}</version> </dependency> -->

		<!-- Spring boot -->
		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>${spring-boot.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Obiettivo: sostituire l'involucro esterno in una applicatione spring 
			boot in cui poter gestire il context annotation allo stesso identico modo 
			del precedente -->


		<!-- REST Client support -->
		<!-- RESTEASY Dependencies -->
		<!-- le librerie resteasy supportano un set di endpoint funzionanti in 
			contesti non springboot -->
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-servlet-initializer</artifactId>
			<version>${resteasy.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-spring</artifactId>
			<version>${resteasy.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
			<version>${resteasy.version}</version>
		</dependency>
		<!-- JSON/POJO support -->
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson2-provider</artifactId>
			<version>${resteasy.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxb-provider</artifactId>
			<version>${resteasy.version}</version>
		</dependency>

		<!-- Fine configurazione dipendenze resteasy -->


		<!-- Jackson . varia spesso la versione per fix di sicurezza. E' fondamentale 
			per la serializzazione json su resteasy e altri -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<!-- librerie swagger -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.9.2</version>
		</dependency>

		<!-- inizio parte web -->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-util</artifactId>
			<version>9.0.10</version>
		</dependency>
		<dependency>
			<groupId>javax.activation</groupId>
			<artifactId>activation</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>commons-digester</groupId>
			<artifactId>commons-digester</artifactId>
			<version>1.5</version>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>[1.7,)</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>[3.2.2,)</version>
		</dependency>
		<dependency>
			<groupId>org.jdom</groupId>
			<artifactId>jdom</artifactId>
			<version>1.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>1.7</version>
		</dependency>
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity-tools</artifactId>
			<version>1.3</version>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
		</dependency>
		<!-- fine parte web -->


		<!-- inizio parte backend -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>${hsqldb.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.hsqldb/sqltool -->
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>sqltool</artifactId>
			<version>${hsqldb.version}</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.10.1</version>
		</dependency>

		<!-- driver accesso database mysql -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.33</version>
		</dependency>

		<!-- fine parte backend -->



	</dependencies>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<stylesheetfile>${basedir}/src/main/javadoc/stylesheet.css</stylesheetfile>
					<show>public</show>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<build>
		<plugins>

			<!-- plugin utile per avviare una istanza springboot con un invoke maven. 
				Attenzione il processo non viene chiuso con il tasto rosso di eclipse . handle 
				with care -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<configuration>
					<serverId>yanexus</serverId>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.5.1</version>
				<executions>
					<execution>
						<id>default-deploy</id>
						<phase>deploy</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<serverId>yanexus</serverId>
					<nexusUrl>https://alessandromodica.com:8081/nexus</nexusUrl>
					<skipStaging>true</skipStaging>
				</configuration>
			</plugin>

			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-toolchains-plugin</artifactId> 
				<version>1.1</version> <executions> <execution> <goals> <goal>toolchain</goal> 
				</goals> </execution> </executions> <configuration> <toolchains> <jdk> <version>${maven.toolchains.sdk}</version> 
				<vendor>oracle</vendor> </jdk> </toolchains> </configuration> </plugin> -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<show>private</show>
					<nohelp>true</nohelp>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.7.1</version>
			</plugin>

			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-project-info-reports-plugin</artifactId> 
				<version>3.0.0</version> </plugin> -->

			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>1.4.10</version>
				<configuration>
					<repository>appcontainer/webapp</repository>
					<tag>1.0.1</tag>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<url>${uri.deploytomcat}</url>
					<server>deploytomcat</server>
					<path>/${webappname}</path>
					<update>true</update>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18.1</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
				<configuration>
					<archive>
						<addMavenDescriptor>true</addMavenDescriptor>
						<manifestSections>
							<manifestSection>
								<name>${project.artifactId}</name>
								<manifestEntries>
									<Implementation-Title>${project.name}</Implementation-Title>
									<Implementation-Vendor>${project.groupId}</Implementation-Vendor>
									<Implementation-Version>${project.version}</Implementation-Version>
									<Implementation-Date>${buildDate}</Implementation-Date>
								</manifestEntries>
							</manifestSection>
						</manifestSections>
					</archive>
				</configuration>
			</plugin>

		</plugins>
	</build>
</project>
